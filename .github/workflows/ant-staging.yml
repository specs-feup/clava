# This workflow will build a Java project with Ant
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-ant

name: Java CI

on:
  push:
    branches: [ staging ]
  pull_request:
    branches: [ staging ]

permissions:
  checks: write

jobs:
  build:

    runs-on: ubuntu-latest

    #defaults:
    #  run:
    #    working-directory: ./..

    steps:
    #- uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    #- name: Eclipse Build
    #  run: |
    #    wget -N http://specs.fe.up.pt/tools/eclipse-build.jar
    #    java -jar eclipse-build.jar --config https://raw.githubusercontent.com/specs-feup/clava/master/eclipse.build
    - name: Generate build.xml
      run: | 
        wget -N http://specs.fe.up.pt/tools/eclipse-build.jar
        java -jar eclipse-build.jar https://github.com/specs-feup/specs-java-libs https://github.com/specs-feup/lara-framework?commit=staging https://github.com/specs-feup/clava?commit=staging
        wget -N -O /usr/share/ant/lib/ivy-2.5.0.jar specs.fe.up.pt/libs/ivy-2.5.0.jar
    - name: Build with Ant
      run: |
        ant -noinput -buildfile build.xml
    #- name: Copy test results        
    #  run: |
    #    # Tried relative paths (not supported by junit action) and symlinks (are not followed by glob)
    #    # Resorted to copying the tests to a folder in the repo folder
    #    cp -a reports-eclipse-build/. clava/reports-eclipse-build/        
    - name: List directory
      run: |
        echo "Current folder"
        ls
    - name: Publish Test Report 
      uses: mikepenz/action-junit-report@v3.6.1
      if: always() # always run even if the previous step fails
      with:
        #report_paths: '**/reports-eclipse-build/TEST-*.xml'
        report_paths: '**/reports-eclipse-build/*.xml'      
        summary: true
        #exclude_sources: ''        
