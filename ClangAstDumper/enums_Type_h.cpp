#include "ClangEnums.h"

extern const std::string clava::BUILTIN_KIND[] = {
        "OCLImage1dRO",
        "OCLImage1dArrayRO",
        "OCLImage1dBufferRO",
        "OCLImage2dRO",
        "OCLImage2dArrayRO",
        "OCLImage2dDepthRO",
        "OCLImage2dArrayDepthRO",
        "OCLImage2dMSAARO",
        "OCLImage2dArrayMSAARO",
        "OCLImage2dMSAADepthRO",
        "OCLImage2dArrayMSAADepthRO",
        "OCLImage3dRO",
        "OCLImage1dWO",
        "OCLImage1dArrayWO",
        "OCLImage1dBufferWO",
        "OCLImage2dWO",
        "OCLImage2dArrayWO",
        "OCLImage2dDepthWO",
        "OCLImage2dArrayDepthWO",
        "OCLImage2dMSAAWO",
        "OCLImage2dArrayMSAAWO",
        "OCLImage2dMSAADepthWO",
        "OCLImage2dArrayMSAADepthWO",
        "OCLImage3dWO",
        "OCLImage1dRW",
        "OCLImage1dArrayRW",
        "OCLImage1dBufferRW",
        "OCLImage2dRW",
        "OCLImage2dArrayRW",
        "OCLImage2dDepthRW",
        "OCLImage2dArrayDepthRW",
        "OCLImage2dMSAARW",
        "OCLImage2dArrayMSAARW",
        "OCLImage2dMSAADepthRW",
        "OCLImage2dArrayMSAADepthRW",
        "OCLImage3dRW",
        "OCLIntelSubgroupAVCMcePayload",
        "OCLIntelSubgroupAVCImePayload",
        "OCLIntelSubgroupAVCRefPayload",
        "OCLIntelSubgroupAVCSicPayload",
        "OCLIntelSubgroupAVCMceResult",
        "OCLIntelSubgroupAVCImeResult",
        "OCLIntelSubgroupAVCRefResult",
        "OCLIntelSubgroupAVCSicResult",
        "OCLIntelSubgroupAVCImeResultSingleRefStreamout",
        "OCLIntelSubgroupAVCImeResultDualRefStreamout",
        "OCLIntelSubgroupAVCImeSingleRefStreamin",
        "OCLIntelSubgroupAVCImeDualRefStreamin",
        "SveInt8",
        "SveInt16",
        "SveInt32",
        "SveInt64",
        "SveUint8",
        "SveUint16",
        "SveUint32",
        "SveUint64",
        "SveFloat16",
        "SveFloat32",
        "SveFloat64",
        "SveBFloat16",
        "SveInt8x2",
        "SveInt16x2",
        "SveInt32x2",
        "SveInt64x2",
        "SveUint8x2",
        "SveUint16x2",
        "SveUint32x2",
        "SveUint64x2",
        "SveFloat16x2",
        "SveFloat32x2",
        "SveFloat64x2",
        "SveBFloat16x2",
        "SveInt8x3",
        "SveInt16x3",
        "SveInt32x3",
        "SveInt64x3",
        "SveUint8x3",
        "SveUint16x3",
        "SveUint32x3",
        "SveUint64x3",
        "SveFloat16x3",
        "SveFloat32x3",
        "SveFloat64x3",
        "SveBFloat16x3",
        "SveInt8x4",
        "SveInt16x4",
        "SveInt32x4",
        "SveInt64x4",
        "SveUint8x4",
        "SveUint16x4",
        "SveUint32x4",
        "SveUint64x4",
        "SveFloat16x4",
        "SveFloat32x4",
        "SveFloat64x4",
        "SveBFloat16x4",
        "SveBool",
        "VectorQuad",
        "VectorPair",
        "RvvInt8mf8",
        "RvvInt8mf4",
        "RvvInt8mf2",
        "RvvInt8m1",
        "RvvInt8m2",
        "RvvInt8m4",
        "RvvInt8m8",
        "RvvUint8mf8",
        "RvvUint8mf4",
        "RvvUint8mf2",
        "RvvUint8m1",
        "RvvUint8m2",
        "RvvUint8m4",
        "RvvUint8m8",
        "RvvInt16mf4",
        "RvvInt16mf2",
        "RvvInt16m1",
        "RvvInt16m2",
        "RvvInt16m4",
        "RvvInt16m8",
        "RvvUint16mf4",
        "RvvUint16mf2",
        "RvvUint16m1",
        "RvvUint16m2",
        "RvvUint16m4",
        "RvvUint16m8",
        "RvvInt32mf2",
        "RvvInt32m1",
        "RvvInt32m2",
        "RvvInt32m4",
        "RvvInt32m8",
        "RvvUint32mf2",
        "RvvUint32m1",
        "RvvUint32m2",
        "RvvUint32m4",
        "RvvUint32m8",
        "RvvInt64m1",
        "RvvInt64m2",
        "RvvInt64m4",
        "RvvInt64m8",
        "RvvUint64m1",
        "RvvUint64m2",
        "RvvUint64m4",
        "RvvUint64m8",
        "RvvFloat16mf4",
        "RvvFloat16mf2",
        "RvvFloat16m1",
        "RvvFloat16m2",
        "RvvFloat16m4",
        "RvvFloat16m8",
        "RvvFloat32mf2",
        "RvvFloat32m1",
        "RvvFloat32m2",
        "RvvFloat32m4",
        "RvvFloat32m8",
        "RvvFloat64m1",
        "RvvFloat64m2",
        "RvvFloat64m4",
        "RvvFloat64m8",
        "RvvBool1",
        "RvvBool2",
        "RvvBool4",
        "RvvBool8",
        "RvvBool16",
        "RvvBool32",
        "RvvBool64",
        "Void",
        "Bool",
        "Char_U",
        "UChar",
        "WChar_U",
        "Char8",
        "Char16",
        "Char32",
        "UShort",
        "UInt",
        "ULong",
        "ULongLong",
        "UInt128",
        "Char_S",
        "SChar",
        "WChar_S",
        "Short",
        "Int",
        "Long",
        "LongLong",
        "Int128",
        "ShortAccum",
        "Accum",
        "LongAccum",
        "UShortAccum",
        "UAccum",
        "ULongAccum",
        "ShortFract",
        "Fract",
        "LongFract",
        "UShortFract",
        "UFract",
        "ULongFract",
        "SatShortAccum",
        "SatAccum",
        "SatLongAccum",
        "SatUShortAccum",
        "SatUAccum",
        "SatULongAccum",
        "SatShortFract",
        "SatFract",
        "SatLongFract",
        "SatUShortFract",
        "SatUFract",
        "SatULongFract",
        "Half",
        "Float",
        "Double",
        "LongDouble",
        "Float16",
        "BFloat16",
        "Float128",
        "Ibm128",
        "NullPtr",
        "ObjCId",
        "ObjCClass",
        "ObjCSel",
        "OCLSampler",
        "OCLEvent",
        "OCLClkEvent",
        "OCLQueue",
        "OCLReserveID",
        "Dependent",
        "Overload",
        "BoundMember",
        "PseudoObject",
        "UnknownAny",
        "BuiltinFn",
        "ARCUnbridgedCast",
        "IncompleteMatrixIdx",
        "OMPArraySection",
        "OMPArrayShaping",
        "OMPIterator",
};

extern const std::string clava::REFERENCE_QUALIFIER[] = {
        "None",
        "LValue",
        "RValue",
};

extern const std::string clava::ARRAY_SIZE_MODIFIER[] = {
        "Normal",
        "Static",
        "Star",
};

extern const std::string clava::UTT_KIND[] = {
        "EnumUnderlyingType",
};

extern const std::string clava::ELABORATED_TYPE_KEYWORD[] = {
        "Struct",
        "Interface",
        "Union",
        "Class",
        "Enum",
        "Typename",
        "None",
};

extern const std::string clava::TAG_KIND[] = {
        "Struct",
        "Interface",
        "Union",
        "Class",
        "Enum",
};

