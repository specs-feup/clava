aspectdef test

	// has previous value
	call SetNumThreads('parallel', '42');

	// no previous value
	call SetNumThreads('parallel for', 'var');
	
	// can't set 'num_threads' value on a 'for' directive.
	call SetNumThreads('for', 'xxx');
	
	
	println('-----------------------------------');
	
	// has previous value
	call SetProcBind('parallel', 'spread');

	// no previous value
	call SetProcBind('parallel for', 'close');
	
	// can't set
	// update: disabled wrong values, now throws exception
	//call SetProcBind('for', 'xxx');
	
	// test setters of directive parallel
	call SetParallelAttributes();
	// test setters of directive for
	call SetForAttributes();

		
	// set whole omp pragma to custom value. Custom content is not compatible with setting attributes, done after attribute set testing
	call SetCustomContent('parallel', 'parallel private(i)');

end

aspectdef SetNumThreads
	input kind, num end
	
	println(kind);
	
	select omp{kind} end
	apply
        println("num_threads:" + $omp.numThreads);
		$omp.exec setNumThreads(num);
        println("num_threads:" + $omp.numThreads);
	end
end

aspectdef SetProcBind
	input kind, proc end
	
	println(kind);
	
	select omp{kind} end
	apply
        println("proc_bind:" + $omp.procBind);
		$omp.exec setProcBind(proc);
        println("proc_bind:" + $omp.procBind);
	end
end

aspectdef SetCustomContent
	input kind, content end
	
	println(kind);
	
	select omp{kind} end
	apply
        println("content:" + $omp.content);
		$omp.content = content;
        println("content:" + $omp.content);
	end
end

aspectdef SetParallelAttributes
		
	select omp{'parallel'} end
	apply
        println("parallel content before:" + $omp.content);
		var sumReduction = $omp.reduction('+');
		sumReduction.push('b');
		$omp.exec setReduction('+', sumReduction);
		$omp.firstprivate = ['first_a', 'first_b'];
		$omp.shared = ['shared_a', 'shared_b'];
		$omp.copyin = ['copyin_a', 'copyin_b'];
		println("parallel content after:" + $omp.content);
	end
end
aspectdef SetForAttributes
		
	select omp{'for'} end
	apply
        println("for content before:" + $omp.content);
		$omp.lastprivate = ['last_a', 'last_b'];
		$omp.scheduleKind = 'static';
		$omp.scheduleChunkSize = 4;
		$omp.scheduleModifiers = ['monotonic'];
		$omp.collapse = 2;
		$omp.exec setOrdered();
		println("for content after:" + $omp.content);
	end
end
