import clava.Clava;
import lara.Io;
//import clava.ClavaJoinPoints;
import weaver.JoinPoints;

aspectdef ClavaTest

	var $aLoop = undefined;

	// Get a join point
	select loop end
	apply 
		$aLoop = $loop;
	end

	var $aScope = undefined;
	select scope end
	apply 
		$aScope = $scope;
	end
	
	// Push AST
	Clava.pushAst();
	
	// Find equivalent join point
	var $eqLoop = Clava.findJp($aLoop);
	if($eqLoop === undefined) {
		println("Could not find loop");
		return;
	}
	
	// Find equivalent join point scope
	var $eqScope = Clava.findJp($aScope);
	if($eqScope === undefined) {
		println("Could not find scope");
		return;
	}
	
	$eqLoop.insertBefore("// Pushed AST");
	
	select program end
	apply
		println("Pushed AST:\n" + $program.code);
	end
			
	Clava.popAst();
	
	select program end
	apply
		println("Original AST:\n" + $program.code);
	end
	
	
	//////
	
	call JpCreateTest();
	
end

aspectdef JpCreateTest

	// New line
	println("JpCreateTest");

	// Create join point
	var astNode = undefined;
	var $loopJp = undefined;
	select loop end
	apply
		$loopJp = $loop;
		astNode = $loop.node;
		// Finish after first loop
	end

	// Check if loop has node
	println("Has node? " + $loopJp.getHasNode(astNode));

	// Create join point
	//var $newLoopJp = ClavaJoinPoints.create(astNode);
	var $newLoopJp = JoinPoints.toJoinPoint(astNode);	

	println("Are JPs equal? " + $newLoopJp.equals($loopJp));
end