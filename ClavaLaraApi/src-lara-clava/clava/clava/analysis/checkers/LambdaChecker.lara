import lara.analysis.Checker;
import lara.analysis.CheckResult;
import lara.analysis.Fix;

/*Check for the presence of lambda objects using capture by reference*/

var LambdaChecker = function() {
      // Parent constructor
    Checker.call(this, "lambda");
    this.advice = " A lambda object must not outlive any of its reference captured objects."
    + "Make sure that variables contained in the lambda expression will not use an obsolete pointer.(CWE-416).\n\n";
};

LambdaChecker.prototype = Object.create(Checker.prototype);

LambdaChecker.prototype.check = function($node) {
	if ((!$node.code.match(/.*\[&\]\s*\(.*\)\s*\{.*\}.*/)) || (!$node.getInstanceOf("vardecl"))) {
      	return;
   	}
	return new CheckResult(this.name, $node, this.advice);
}
