import lara.analysis.Checker;
import lara.analysis.CheckResult;
import lara.analysis.Fix;

/*Check for the presence of gets functions*/

var GetsChecker = function() {
    // Parent constructor
    Checker.call(this, "gets");
    this.advice = " Unsafe function gets() can be replaced by safer fgets()(Possible Fix). gets() doesn\'t check the length of the buffer: risk of buffer overflow (CWE-120, CWE-20).\n\n";
};

GetsChecker.prototype = Object.create(Checker.prototype);

GetsChecker.fixAction = function($node) {
    var newFunction = "fgets("+ $node.args[0].code + ", sizeof("
			        + $node.args[0].code + "), stdin)";
	$node.replaceWith(newFunction);
}

GetsChecker.prototype.check = function($node) {
    if ((!$node.getInstanceOf("call")) || ($node.name !== 'gets')) {
        return;
    }
    return new CheckResult(this.name, $node, this.advice, new Fix($node, GetsChecker.fixAction));
}
